% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_management.R
\name{speech_to_summary_workflow}
\alias{speech_to_summary_workflow}
\title{Full Speech-To-Summary Workflow Execution}
\usage{
speech_to_summary_workflow(
  audio_path,
  stt_intermediate_dir = file.path(dirname(audio_path), "transcripts"),
  stt_overwrite_intermediate_files = FALSE,
  stt_model,
  stt_initial_prompt = NULL,
  stt_language = "en",
  extra_stt_args = NULL,
  transcript_to_merge = NULL,
  import_diarization_on_merge = TRUE,
  chat_file = NULL,
  chat_start_time = NULL,
  chat_format = "webex",
  transcript_output_file = file.path(dirname(audio_path), "transcript.csv"),
  overwrite_transcript = FALSE,
  agenda = file.path(dirname(audio_path), "agenda.R"),
  meeting_description = NULL,
  meeting_audience = NULL,
  vocabulary = NULL,
  consider_diarization = TRUE,
  extra_diarization_instructions = NULL,
  llm_provider = NULL,
  extra_summarise_args = NULL,
  summarization_output_file = file.path(dirname(audio_path), "event_summary.R"),
  overwrite_summary_tree = FALSE,
  formatted_output_file = file.path(dirname(audio_path), "event_summary.txt"),
  overwrite_formatted_output = FALSE
)
}
\arguments{
\item{audio_path}{A string with the path to an audio file or a folder containing
audio files. If a folder is provided, the function will process all audio
files in the folder. See \code{perform_speech_to_text} for more details.}

\item{stt_intermediate_dir}{A string with the path to the folder where the
intermediate json files generated by the speech-to-text model will be
stored. See \code{perform_speech_to_text} for more details.}

\item{stt_overwrite_intermediate_files}{A boolean indicating whether the
intermediate json files generated by the speech-to-text model should be
overwritten if they already exist. See \code{perform_speech_to_text} for more
details.}

\item{stt_model}{A string indicating the speech-to-text model to use. See
\code{perform_speech_to_text} for more details.}

\item{stt_initial_prompt}{A string with the path to a file containing the
initial prompt to be used by the speech-to-text model. See
\code{perform_speech_to_text} for more details.}

\item{stt_language}{A string indicating the language of the audio file. See
\code{perform_speech_to_text} for more details.}

\item{extra_stt_args}{A list containing extra arguments to be passed to the
stt model function. See \code{perform_speech_to_text} for more details.}

\item{transcript_to_merge}{A string with the path to the transcript file to
be merged with the transcript generated by the speech-to-text model. See
\code{merge_transcripts} for more details.}

\item{import_diarization_on_merge}{A boolean indicating whether the speaker
should be imported from the transcript to be merged, if present. See
\code{merge_transcripts} for more details.}

\item{chat_file}{A string with the path to a file containing the chat data.
See \code{add_chat_transcript} for more details.}

\item{chat_start_time}{The start time of the meeting. A string in the format
"HH:MM AM/PM" or "HH:MM:SS". See \code{add_chat_transcript} for more details.}

\item{chat_format}{A string indicating the online meeting platform used to
generate the chat file. See \code{add_chat_transcript} for more details.}

\item{transcript_output_file}{A string with the path to the output file where
the transcript will be written.}

\item{overwrite_transcript}{A boolean indicating whether the transcript
output file should be overwritten if it already exists.}

\item{agenda}{A list containing the agenda items or a path to an R file
containing such list. See \code{summarise_full_meeting} for more details.}

\item{meeting_description}{A string containing a description of the meeting.
See \code{summarise_transcript} for more details.}

\item{meeting_audience}{A string containing a description of the audience of
the meeting and what to focus on in the summary. See \code{summarise_transcript}
for more details.}

\item{vocabulary}{A character vector of specific vocabulary words, names,
definitions, to help the LLM recognise misspellings and abbreviations. See
\code{summarise_transcript} for more details.}

\item{consider_diarization}{A logical indicating whether the summarisation
should take into account the diarization of the transcript. See
\code{summarise_transcript} for more details.}

\item{extra_diarization_instructions}{Additional diarization instructions.
See \code{summarise_transcript} for more details.}

\item{llm_provider}{A string indicating the LLM provider to use for the
summarization. See \code{summarise_transcript} for more details.}

\item{extra_summarise_args}{Additional arguments passed to the
\code{interrogate_llm} function. See \code{summarise_transcript} for more details.}

\item{summarization_output_file}{A string with the path to the output file
where the summary tree will be written. Should be a .R file. See
\code{summarise_full_meeting} for more details.}

\item{overwrite_summary_tree}{A boolean indicating whether the summary tree
output file should be overwritten if it already exists.}

\item{formatted_output_file}{A string with the path to the output file where the
formatted summary will be written.}

\item{overwrite_formatted_output}{A boolean indicating whether the formatted
summary output file should be overwritten if it already exists.}
}
\value{
A list containing the transcript data, the summary tree and the
formatted summary.
}
\description{
This function executes the full speech-to-summary workflow, from the
transcription of the audio recording to the generation of the summary tree,
to the formatting of the summary tree into a human-readable text.
}
